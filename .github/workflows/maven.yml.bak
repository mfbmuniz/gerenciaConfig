# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Pipeline Pacientes

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  test:

    runs-on: ubuntu-latest
    strategy:
          matrix:
            database-name:
            - pacientesdb
            database-password:
            - 33853056
            database-user:
            - postgres
            database-host:
            - 127.0.0.1
            database-port:
            - 5432
    
    services:
          postgres:
            image: postgres:latest
            env:
              POSTGRES_DB: ${{ matrix.database-name }}
              POSTGRES_USER: ${{ matrix.database-user }}
              POSTGRES_PASSWORD: ${{ matrix.database-password }}
            ports:
              - 5432:5432
            # Set health checks to wait until postgres has started
            options:
              --health-cmd pg_isready
              --health-interval 10s
              --health-timeout 5s
              --health-retries 5

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 20
      uses: actions/setup-java@v3
      with:
        java-version: '20'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file ./Codigo/backend/pom.xml

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
